name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-4-dev libgtk-layer-shell-dev wayland-protocols meson ninja-build libwayland-dev wayland-protocols libgtk-4-dev gobject-introspection libgirepository1.0-dev gtk-doc-tools python3 valac scdoc
          git clone https://github.com/wmww/gtk4-layer-shell.git && cd gtk4-layer-shell
          meson setup -Dexamples=true -Ddocs=true -Dtests=true build
          ninja -C build
          sudo ninja -C build install
          sudo ldconfig

      - name: Build and run tests
        run: |
          make test
          # The workflow will automatically stop here if tests fail due to non-zero exit code
          echo "All tests passed successfully"

      - name: Build man pages
        run: |
          make generate_man

      - name: Create tarball
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          mkdir -p pipelam-${VERSION}/man
          cp -r build/pipelam pipelam-${VERSION}
          cp -r config pipelam-${VERSION}
          cp -r build/man/pipelam.1 pipelam-${VERSION}/man
          cp -r build/man/pipelam.toml.5 pipelam-${VERSION}/man
          cp -r LICENSE pipelam-${VERSION}
          cp -r README.md pipelam-${VERSION}
          tar -czf pipelam-${VERSION}.tar.gz pipelam-${VERSION}

      - name: Generate Release Notes
        id: generate_notes
        run: |
          PREVIOUS_TWO_TAGS=$(git tag --sort=-version:refname | head -n 2)

          CURRUNT_TAG=$(echo $PREVIOUS_TWO_TAGS | awk '{print $1}')
          PREVIOUS_TAG=$(echo $PREVIOUS_TWO_TAGS | awk '{print $2}')

          # Get all the commit messages between the two tags
          RELEASE_NOTES=$(git log --pretty=format:"* %s" ${PREVIOUS_TAG}..${CURRUNT_TAG})

          # Set the notes for later use with multiline string handling
          RELEASE_NOTES="${RELEASE_NOTES//'%'/'%25'}"
          RELEASE_NOTES="${RELEASE_NOTES//$'\n'/'%0A'}"
          RELEASE_NOTES="${RELEASE_NOTES//$'\r'/'%0D'}"
          echo "notes=$RELEASE_NOTES"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: pipelam ${{ github.ref_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            pipelam-*.tar.gz
