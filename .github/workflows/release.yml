name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-4-dev libgtk-layer-shell-dev wayland-protocols meson ninja-build libwayland-dev wayland-protocols libgtk-4-dev gobject-introspection libgirepository1.0-dev gtk-doc-tools python3 valac scdoc
          git clone https://github.com/wmww/gtk4-layer-shell.git && cd gtk4-layer-shell
          meson setup -Dexamples=true -Ddocs=true -Dtests=true build
          ninja -C build
          sudo ninja -C build install
          sudo ldconfig

      - name: Build and run tests
        run: |
          make test
          # The workflow will automatically stop here if tests fail due to non-zero exit code
          echo "All tests passed successfully"

      - name: Build man pages
        run: |
          make docs

      - name: Create tarball
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          mkdir -p pipelam-${VERSION}/man
          cp -r build/pipelam pipelam-${VERSION}
          cp -r config pipelam-${VERSION}
          cp -r build/man/pipelam.1 pipelam-${VERSION}/man
          cp -r build/man/pipelam.toml.5 pipelam-${VERSION}/man
          cp -r LICENSE pipelam-${VERSION}
          cp -r README.md pipelam-${VERSION}
          tar -czf pipelam-${VERSION}.tar.gz pipelam-${VERSION}

      - name: Generate Release Notes
        id: generate_notes
        run: |
          # Extract release notes from the tag commit message
          TAG_NAME=${GITHUB_REF#refs/tags/}

          # Get the commit message from the tag
          TAG_MESSAGE=$(git tag -l --format='%(contents)' "$TAG_NAME")

          # Save the tag message as release notes
          echo "$TAG_MESSAGE" > release_notes.md

          echo "Using tag commit message for release notes"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: pipelam ${{ github.ref_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            pipelam-*.tar.gz
